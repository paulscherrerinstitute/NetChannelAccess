<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd">
  <metadata>
    <id>$id$</id>
    <version>$version$</version>
    <title>$title$</title>
    <authors>$author$</authors>
    <owners>$author$</owners>
    <!--<projectUrl>https://sourceforge.net/p/epicssharp/wiki/Home/</projectUrl>-->
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>$description$

This package replaces the packages "CaSharpServer" and "EpicsClient2".

-------------------------------------------------------------------   
The following code will read a value of a channel (ARIDI-PCT:CURRENT) and print it out on the screen
-------------------------------------------------------------------
using EpicsSharp.ChannelAccess.Client;
using System;

namespace ConsoleApp4
{
    class Program
    {
        static void Main(string[] args)
        {
            var client = new CAClient();
            // Required if you use an EPICS Gateway, otherwise skip the line
            client.Configuration.SearchAddress = "sls-cagw:5062";
            var channel = client.CreateChannel&gt;string&lt;("ARIDI-PCT:CURRENT");
            // Synchronously read a channel and shows the value.
            // If the channel doesn't exist an exception will be thrown.
            Console.WriteLine(channel.Get());        
        }
    }
}

-------------------------------------------------------------------
The second example will instead "monitor" the value and call the callback every time the value changes:
-------------------------------------------------------------------
using EpicsSharp.ChannelAccess.Client;
using System;

namespace ConsoleApp4
{
    class Program
    {
        static void Main(string[] args)
        {
            var client = new CAClient();
            // Required if you use an EPICS Gateway, otherwise skip the line
            client.Configuration.SearchAddress = "sls-cagw:5062";
            var channel = client.CreateChannel&gt;string&lt;("ARIDI-PCT:CURRENT");
            // Will connect (if possible) to the channel and receive the value in the callback. In case of
            // disconnection the channel will try to reconnect automatically
            channel.MonitorChanged += (chan, val) =>
            {
                  Console.WriteLine(val);
            };
            Console.ReadKey();
        }
    }
}
-------------------------------------------------------------------

Note:
The client library will use the app settings "e#ServerList" to grab potential SearchAddress.
    </description>
    <copyright>Copyright Â© 2013 - 2018 $author$</copyright>    
  </metadata>
</package>
